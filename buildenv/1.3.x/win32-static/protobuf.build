#!/usr/bin/env mumble-build
# Copyright 2013-2014 The 'mumble-releng' Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that
# can be found in the LICENSE file in the source tree or at
# <http://mumble.info/mumble-releng/LICENSE>.

urls=(
	"http://releng-distfiles.mumble.info/releng-distfiles/protobuf-2.5.0.zip"
	"https://protobuf.googlecode.com/files/protobuf-2.5.0.zip"
)

digests=(
	"sha1:e6e769b37eb0f8a9507b4525615bb3d798cd5750"
)

function extract {
	unzip -q -o protobuf-2.5.0.zip
	cd protobuf-2.5.0
}

function prepare {
	patch -p1 < ${MUMBLE_BUILDENV_ROOT}/patches/protobuf-2.5.0-fix-missing-algorithm-h-msvs2013.patch
	patch -p1 < ${MUMBLE_BUILDENV_ROOT}/patches/protobuf-2.5.0-win32-disable-OutputDirectoryIsFileError-test.patch

	cd vsprojects

	cmd /c extract_includes.bat

	sed -i -re 's/Format Version 9.00/Format Version 11.00/g;
	            s/Visual Studio 2005/Visual Studio 2010/g;
	            s/\.vcproj/\.vcxproj/g;' protobuf.sln

	for fn in `ls *.vcproj`; do
		cmd /c vcupgrade.exe -overwrite ${fn}
	done

	sed -i -re 's/Name="gtest"/Name="gtest" RelativePathToProject="gtest.vcproj"/g;' ../gtest/msvc/gtest_main.vcproj
	cmd /c vcupgrade.exe -overwrite ..\\gtest\\msvc\\gtest.vcproj
	cmd /c vcupgrade.exe -overwrite ..\\gtest\\msvc\\gtest_main.vcproj

	cmd /c python.exe $(cygpath -w ${MUMBLE_PREFIX}/mumble-releng/tools/vs-sln-convert-to-per-project-deps.py) protobuf.sln

	if [ "${ARCH}" == "amd64" ]; then
		for fn in *.vcxproj *.sln ../gtest/msvc/*.vcxproj; do
			sed -i -re "s,<Platform>Win32</Platform>,<Platform>X64</Platform>,g;
			            s,<TargetMachine>MachineX86</TargetMachine>,<TargetMachine>MachineX64</TargetMachine>,g;
			            s,Release\|Win32,Release|X64,g;
			            s,Debug\|Win32,Debug|X64,g" "${fn}"

		done
	fi

	# Force /ARCH:IA32 if we're targetting pure x86.
	# The EnableEnhancedInstructionSet is intended to
	# be inserted into the <ClCompile> tag in the
	# <ItemDefinitionGroup> tags for both Release and
	# Debug builds.
	if [[ ${VSMAJOR} -gt 10 && "${ARCH}" == "x86" ]]; then
		for fn in `ls *.vcxproj`; do
			sed -i -re "s,<ClCompile>,<ClCompile>\n      <EnableEnhancedInstructionSet>NoExtensions</EnableEnhancedInstructionSet>,g" "${fn}"
		done
	fi
}

function build {
	cmd /c msbuild.exe protobuf.sln /p:Configuration=Release /p:PlatformToolset=${MUMBLE_VSTOOLSET}
	cmd /c msbuild.exe protobuf.sln /p:Configuration=Debug /p:PlatformToolset=${MUMBLE_VSTOOLSET}
}

function testsuite {
	cd Release
	cmd /c lite-test.exe
	cmd /c tests.exe
	cd ..
	cd Debug
	cmd /c lite-test.exe
	cmd /c tests.exe
	cd ..
}

function install {
	mkdir -p ${MUMBLE_PREFIX}/protobuf/vsprojects/include/
	cp -R include/* ${MUMBLE_PREFIX}/protobuf/vsprojects/include/

	mkdir -p ${MUMBLE_PREFIX}/protobuf/vsprojects/Release/
	cp -R Release/*.{exe,pdb,lib} ${MUMBLE_PREFIX}/protobuf/vsprojects/Release/

	mkdir -p ${MUMBLE_PREFIX}/protobuf/vsprojects/Debug/
	cp -R Debug/*.{exe,pdb,lib} ${MUMBLE_PREFIX}/protobuf/vsprojects/Debug/
}
